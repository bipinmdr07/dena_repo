

<p>
  To add the upvoting feature, let's install a new gem into our app.
</p>

<p>
  Let's add the <code>acts_as_votable</code> gem.
</p>

<p class="alert alert-success">
  Take a few minutes to read <%= link_to 'the documentation', 'https://github.com/ryanto/acts_as_votable' %>.
</p>

<p>
  First, let's add the following line into our <code>Gemfile</code>.
</p>  

<pre><code class="ruby">
gem 'acts_as_votable', '~> 0.10.0'
</code></pre>

<p>
  Save the file and run <code>bundle install</code> in your terminal to install the gem.
</p>

<p>
  Next, go into your terminal and run the following commands:
</p>

<pre><code class="bash">
rails generate acts_as_votable:migration
rake db:migrate
</code></pre>

<p>
  To make our <code>Post</code>s votable, let's open up our <code>post.rb</code> file and add in <code>acts_as_votable</code>. Your <code>post.rb</code> file should now look like this:
</p>

<pre><code class="ruby">
class Post &lt; ActiveRecord::Base
  belongs_to :user
  has_many :comments, dependent: :destroy
  
  mount_uploader :photo, PhotoUploader

  validates :photo, :description :user_id, presence: true

  acts_as_votable
end
</code></pre>

<p>
  We also need to set the <code>User</code> model as the voter. To do this, let's open up our <code>user.rb</code> file and add in <code>acts_as_voter</code>. Your <code>user.rb</code> file should now look like this:
</p>

<pre><code class="ruby">
class User &lt; ActiveRecord::Base
  # Include default devise modules. Others available are:
  # :confirmable, :lockable, :timeoutable and :omniauthable
  devise :database_authenticatable, :registerable,
         :recoverable, :rememberable, :trackable, :validatable
  mount_uploader :photo, PhotoUploader
  
  has_many :posts, dependent: :destroy
  has_many :comments, dependent: :destroy

  acts_as_voter
end
</code></pre>

<p>
  Awesome. Now that we've got everything set up, in the next lesson, we're going to setup the backend for handling upvotes and downvotes.
</p>

<%= standard_git_workflow %>







