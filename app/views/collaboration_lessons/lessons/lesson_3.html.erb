

<p>
  When you enter the world of software development, you will often hear terms like "Agile" and "Scrum". Many people talk about "agile" teams and how they utilize the Scrum.
</p>

<p>
  In the next two chapters, let's briefly go over what Agile and Scrum is, and how they make teams more productive and efficient.
</p>

<h3>Agile Development</h3>

<p>
  Agile is a method of software development. When working with an Agile team, <strong>the team assumes that the client or customer's requirements or need will change frequently, so it's pointless to make a detailed plan/specification documentation for many months ahead.</strong>
</p>

<p>
  Companies have to listen to customer's demand and respond to them to stay in business. However, it's nearly impossible to predict the customer's demand ahead of time, or know what exactly what the customer wants. Instead, according to the Agile methodology, <strong>it is often times smarter to assume that the customer or the client will change their mind and develop accordingly.</strong>
</p>

<p>
  Let's take a look at the following statements from the <a href="http://agilemanifesto.org/" target="_blank">Agile Manifesto</a>:
</p>

<blockquote>
  Individuals and interactions over processes and tools<br>
  Working software over comprehensive documentation<br>
  Customer collaboration over contract negotiation<br>
  Responding to change over following a plan
</blockquote>

<p>
  Specifically, although agile can differ between teams, the following practices are quite common across any of the teams:
</p>

<ul>
  <li>Short development cycles and frequent releases</li>
  <p>
    It is common for software teams to ship early and often. Customers can see the product quickly, which means that it will allow the team to listen to customer's feedback and respond to them quickly. 
  </p>

  <li>Close interaction with the customer and the development team</li>
  <p>
    As stated in the manifesto, typically a developer team will interact closely with the customer, or the product manager. The customer is in charge of laying out which features should be built out and how they should be prioritized.
  </p>
</ul>

<p>
  There are many articles and blog posts talking about Agile development, but overall, Agile refers to a philosophy where development teams assume that the client or customer will change what they require, so the development team should be able to quickly change trajectories quickly and avoid wasting time.
</p>













