<h1><%= title_for(IdeatorLesson, 2, 2) %></h1>

<p>
	Okay cool. Now let’s open up Sublime Text and open the project file up so we can start developing our web application. In sublime, open up the folder called “Ideator” located in the desktop that we just created.
</p>

<p>
	You can see all the files that rails generated for us. Now we’re going to generate some more. Let’s hop into our terminal and type in this command:
</p>

<pre><code class="bash">
rails generate controller ideas
</code></pre>

<p>
	This command generates a <code>controller</code> called <code>ideas</code> for you and will also generate a lot of files again. Don’t worry too much about what this piece of code does yet. Things will start coming together as we progress, but for now we want you to start building an app first. This will keep you motivated from the start and help you overcome the first initial wall.
</p>

<p>
	Now let’s go into Sublime and open up <code>ideas_controller.rb</code> (remember the little trick? Command + P).
</p>

<p>
	Inside <code>ideas_controller.rb</code>, let’s add an <code>index</code> method like this. 
</p>

<pre><code class="ruby">
class IdeasController &lt; ApplicationController
  def index
  end
end
</code></pre>

<p>
	Now when we ran <code>rails generate controller ideas</code>, we also generated an ideas folder in the views folder. Views are basically where all of the html files are stored (html files can be “view”ed, hence they are called Views”.
</p>

<p>
	Let’s right click on that ideas folder and create a new file. Let’s save that file as <code>index.html.erb</code>.
</p>

<p>
	Inside index.html.erb, let’s add this:
</p>

<pre><code class="erb">
&lt;h1&gt;This is my first app ever and I’m super excited to become a coder&lt;/h1&gt;
</code></pre>

<p>Awesome! Now let’s hop back into our browser and refresh <code>localhost:3000</code>.</p>

<p>...nothing has changed. Hmm.</p>

<p>
	Well it turns out that you have tell rails where your homepage should be. The way we do that is by changing the routing of the pages.
</p>

<p>
	Inside sublime let’s open up <code>routes.rb</code>. This is the file where you can tell rails how you want to ‘route’ your pages, meaning you can tell rails how to generate URLs.
</p>

<p>
	Inside this file, let’s uncomment <code>root 'welcome#index'</code> and instead replace it with <code>root ‘ideas#index’</code>.
</p>

<p>
	So what we’re telling rails here is that we want to have the ‘root’, or the homepage of the application as index in the ideas controller, which we just set up.
</p>

<p>
	Now let’s hop back into <code>localhost:3000</code> and let’s see what happens.
</p>

<p>
	Boom! You should now see “This is my first app ever and I’m super excited to become a coder”.
</p>

<p>
	Congrats on making it this far. You have written your first page on Ruby on Rails!
</p>

<div id = "HighFive" style = "width:80%;height:300px;display:none;">
	<i class="fa fa-hand-paper-o" style = "font-size:300px;display:block;">Woooooooo!!!</i>
</div>

<p>
	Let’s now commit this to GitHub.
</p>

<p>We’re first going to add all the files that we just updated:</p>

<pre><code class="bash">
git add .
</code></pre>

<p>Then we’re going to add a commit message describing what we just updated:</p>

<pre><code class="bash">
git commit -am “Add ideas controller and set ideas#index as root”
</code></pre>

<p>And finally, push up to GitHub.</p>

<pre><code class="bash">
git push origin master
</code></pre>

<p><strong>You’ll be doing this quite a lot and it will become second nature!</strong></p>





<script>
$( '#HideHighFive' ).click(function() {
	$( '#HideHighFive' ).hide();
	$( " #HighFive " ).show();
  $( " #HighFive " ).hide( "puff", {percent:500}, 2000 );
  $( '#HideHighFive' ).delay(2000).show(0);
});
</script>

