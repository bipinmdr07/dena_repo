

<p>
	Welcome to the world of <strong>Object Oriented Programming</strong>.
</p>

<p>
	In these next few lessons, we will give you a basic overview of what object oriented programming is.
</p>

<h3>Classes and Instances</h3>

<p>
	<strong>Let's talk about cats.</strong>
</p>

<p>
	If we think about cats, all cats share same characteristics but also differ in how they look, their age, and their given name.
</p>

<p>
	<strong>All cats have:</strong>
</p>

<ul>
	<li>Name</li>
	<li>Age</li>
	<li>Breed</li>
</ul>

<p>
	<strong>All cats can:</strong>
</p>

<ul>
	<li>Walk forward</li>
	<li>Run</li>
	<li>Jump</li>
	<li>Eat</li>
</ul>	

<p>
	We can organize this information into a <strong><em>class</em></strong> that we can name <code>Cat</code>. Inside the class, we can have <strong><em>variables</em></strong> that represent the common attributes of a cat, and <strong><em>methods</em><strong> that represent the common operations that all cats can perform.
</p>	

<p>
	Each different cat is an <strong><em>instance</em></strong> of the <code>Cat</code> class:
</p>	

<%= image_tag 'ruby_lessons/class_vs_instance.png', class: 'screenshot img-responsive' %>

<p>
	With this brief introduction of Object Oriented Programming in mind, let's go back to our bill generator program and turn it into an object oriented program.
</p>	


<h3>Objects</h3>

<p>
	Let's think about the bill generator program that we wrote before. When we generate a bill, what are the objects that are involved?
</p>

<ul>
	<li>Orders</li>
	<li>A Bill Calculator that inputs the orders</li>
</ul>

<p>
	<strong>Let's first talk about orders.</strong>
</p>

<p>
	What does an order consist of?
</p>

<p>
	<strong>It consists of...</strong>
</p>
<ul>
	<li>An item</li>
	<li>The price of the item</li>
</ul>

<P>
	An order also might consist of information like when the order was taken, who the order was taken by, and so forth, but for now let's just focus on these two pieces of information: the <em>item</em> of the order and the <em>price</em> of that item.
</P>

<p>
	Let's look at an example:
</p>

<ul>
	<li><strong>Order 1</strong></li>
	<ul>
		<li>Item: Pizza</li>
		<li>Price: 200</li>
	</ul>

	<li><strong>Order 2</strong></li>
	<ul>
		<li>Item: Milk Tea</li>
		<li>Price: 40</li>
	</ul>

	<li><strong>Order 1</strong></li>
	<ul>
		<li>Item: Coffee</li>
		<li>Price: 60</li>
	</ul>
</ul>

<p>
	Here, we see three orders, each with different information. <strong>How can we represent these 3 orders in a consistent and understandable way in code?</strong> We'll explore how we can organize information into <em>classes</em> in the next lesson.
</p>


<h3>Deploying to Heroku</h3>

<p>
  Let's deploy all of the new changes that we have made to Heroku!
</p>

<pre><code class="bash">
git push heroku master
</code></pre>

<p>
  Every time we push to Heroku, we should restart the server:
</p>

<pre><code class="bash">
heroku restart
</code></pre>















