<p>
	Instance variables are variables prefixed with <code>@</code>. Instance variables are variables that have different values for each instance of the class. 
</p>

<p>
	For example, in real life, every cat has a different name and is a different breed. Similarly, in classes, each <em>instance</em> of a class will have different values for various attributes.
</p> 


<%= image_tag 'ruby_lessons/instance_variables.png', class: 'screenshot img-responsive' %>

<p>
	<strong>Instance variables can be used throughout the instance of the class.</strong> <strong>Local variables (variables without <code>@</code>) can only be used within the method that it was created in:</strong>
</p>

<p>For example:</p>

<pre><code class="ruby">
class Person
	def initialize(name)
		@name = name
		age = 21
	end

	# We can use @name in methods outside of the initialize method as well
	def say_name
		puts "My name is #{@name}"
	end

	# This will give us an error!! Local variables can only be used in the method it was declared in!
	def say_age
		puts "My age is #{age}"
	end
end	
</code></pre>

<p>
	Now that we know what the <code>initialize</code> method is and what instance variables are, let's fix our program:
</p>

<pre><code class="ruby">
class Dog
	def initialize(name, breed)
		@name = name
		@breed = breed
	end
end

# Let's add parameters so that our initialize method works
barnie = Dog.new("Barnie", "Golden Retriever")

puts barnie.inspect
</code></pre>

<p>
	Now the output should be something like this:
</p>

<pre><code class="bash">
#&lt;Dog:0x000000024f0d60 @name="Barnie", @breed="Golden Retriever"&gt;
</code></pre>

<p>
	As you can see, <code>"Barnie"</code> has been stored in <code>@name</code> and <code>"Golden Retriever"</code> has been stored in <code>@breed</code>. These instance variables are now stored inside of this instance of the <code>Dog</code> object. What if we create another <code>Dog</code> object? Let's make the file look like this:
</p>

<pre><code class="ruby">
class Dog
	def initialize(name, breed)
		@name = name
		@breed = breed
	end
end

# Let's add parameters so that our initialize method works
barnie = Dog.new("Barnie", "Golden Retriever")

puts barnie.inspect

cynthia = Dog.new("Cynthia", "Bulldog")

puts cynthia.inspect
</code></pre>

<p>
	Now you should see two different instances of the <code>Order</code> object, both with different values for the instance variables:
</p>

<pre><code class="bash">
#&lt;Dog:0x000000024f0d60 @name="Barnie", @breed="Golden Retriever"&gt;
#&lt;Dog:0x000000024f0d60 @name="Cynthia", @breed="Bulldog"&gt;
</code></pre>

<p>
	As you can see, instance variables (variables prefixed with <code>@</code>) are variables that have different values for every instance of the object.
</p>


<h2>Assignment</h2>

<ol>
	<li>Write a <code>Car</code> class with the following attributes</li>
	<ul>
		<li>Brand</li>
		<li>Color</li>
		<li>Maximum Passenger</li>
		<li>Max Speed</li>
	</ul>
</ol>

<% @submission_form = true %>


















