<p>
  Understanding Big-O is essential when doing technical interviews, but it may seem like a scary concept at first. It is a concept that every computer science student learns. Let's try to break it down so it doesn't seem too scary.
</p>

<p>
  <strong>Big-O notation is used to talk about how algorithms scale</strong>. It answers the question, "how will the algorithm perform as it gets more input and more complicated?"
</p>

<p>
  Let's try to learn Big-O with examples, rather than explanation.
</p>

<h2>Constant Time Algorithms</h2>

<p>
  Let's take a look at the following method:
</p>

<pre><code class="ruby">
def add(a, b)
  a + b
end
</code></pre>